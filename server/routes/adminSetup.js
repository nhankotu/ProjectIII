// routes/adminSetup.js
import express from "express";
import User from "../models/User.js";

const router = express.Router();

// POST /api/admin/setup - T·∫°o t√†i kho·∫£n admin (kh√¥ng m√£ h√≥a password)
router.post("/setup", async (req, res) => {
  try {
    const { email, password, secretKey } = req.body;

    console.log("üì® Request t·∫°o admin:", { email, secretKey });

    // 1. Ki·ªÉm tra secret key
    if (secretKey !== "ADMIN_SETUP_2024") {
      return res.status(403).json({
        success: false,
        message: "Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!",
      });
    }

    // 2. Ki·ªÉm tra email v√† password
    if (!email || !password) {
      return res.status(400).json({
        success: false,
        message: "Vui l√≤ng cung c·∫•p email v√† password!",
      });
    }

    if (password.length < 6) {
      return res.status(400).json({
        success: false,
        message: "Password ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!",
      });
    }

    // 3. Ki·ªÉm tra xem admin ƒë√£ t·ªìn t·∫°i ch∆∞a
    const existingAdmin = await User.findOne({
      $or: [{ email: email }, { role: "admin" }],
    });

    if (existingAdmin) {
      return res.status(400).json({
        success: false,
        message: "Admin ƒë√£ t·ªìn t·∫°i!",
        existingAdmin: {
          email: existingAdmin.email,
          role: existingAdmin.role,
        },
      });
    }

    // 4. T·∫°o admin user (KH√îNG M√É H√ìA PASSWORD)
    const adminUser = new User({
      username: "admin",
      email: email.toLowerCase(),
      password: password, // L∆∞u password tr·ª±c ti·∫øp, kh√¥ng m√£ h√≥a
      role: "admin",
      isVerified: true,
      status: "active",
    });

    await adminUser.save();

    console.log("‚úÖ ƒê√£ t·∫°o admin th√†nh c√¥ng:", adminUser.email);
    console.log("‚ö†Ô∏è C·∫¢NH B√ÅO: Password ch∆∞a ƒë∆∞·ª£c m√£ h√≥a!");

    // 5. Tr·∫£ v·ªÅ response
    res.status(201).json({
      success: true,
      message: "T·∫°o t√†i kho·∫£n admin th√†nh c√¥ng!",
      user: {
        id: adminUser._id,
        username: adminUser.username,
        email: adminUser.email,
        role: adminUser.role,
        status: adminUser.status,
      },
    });
  } catch (error) {
    console.error("‚ùå L·ªói t·∫°o admin:", error);
    res.status(500).json({
      success: false,
      message: "L·ªói server khi t·∫°o admin!",
      error: error.message,
    });
  }
});

export default router;
