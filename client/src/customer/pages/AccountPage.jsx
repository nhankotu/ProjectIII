import React from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../components/hooks/useAuth";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import {
  User,
  Settings,
  ShoppingBag,
  MapPin,
  CreditCard,
  Bell,
  Shield,
  LogOut,
} from "lucide-react";

const AccountPage = () => {
  const { user, logout, isAuthenticated, login } = useAuth();
  const navigate = useNavigate();

  // D·ªØ li·ªáu m·∫´u cho ƒëƒÉng nh·∫≠p
  const loginCredentials = {
    email: "nguyenvana@email.com",
    password: "password123",
  };

  // D·ªØ li·ªáu m·∫´u cho user (n·∫øu c·∫ßn cho demo)
  const sampleUser = {
    id: 1,
    name: "Nguy·ªÖn VƒÉn A",
    email: "nguyenvana@email.com",
    phone: "0912345678",
    avatar: "/api/placeholder/100/100",
    addresses: [
      {
        id: 1,
        name: "Nh√† ri√™ng",
        phone: "0123456789",
        address: "123 ƒê∆∞·ªùng ABC, Ph∆∞·ªùng XYZ, Qu·∫≠n 1, TP. H·ªì Ch√≠ Minh",
        isDefault: true,
      },
    ],
  };

  const orders = [
    {
      id: "DH001",
      date: "15/01/2024",
      status: "completed",
      total: "12.990.000‚Ç´",
      items: 2,
    },
    {
      id: "DH002",
      date: "10/01/2024",
      status: "shipping",
      total: "8.490.000‚Ç´",
      items: 1,
    },
    {
      id: "DH003",
      date: "05/01/2024",
      status: "cancelled",
      total: "5.990.000‚Ç´",
      items: 1,
    },
  ];

  const getStatusBadge = (status) => {
    const variants = {
      completed: "bg-green-100 text-green-800",
      shipping: "bg-blue-100 text-blue-800",
      cancelled: "bg-red-100 text-red-800",
    };
    return (
      <Badge className={variants[status]}>
        {status === "completed"
          ? "Ho√†n th√†nh"
          : status === "shipping"
          ? "ƒêang giao"
          : "ƒê√£ h·ªßy"}
      </Badge>
    );
  };

  const handleLogin = async () => {
    // S·ª≠ d·ª•ng h√†m login t·ª´ useAuth v·ªõi email v√† password
    const result = await login(
      loginCredentials.email,
      loginCredentials.password
    );
    if (result.success) {
      console.log("ƒêƒÉng nh·∫≠p th√†nh c√¥ng");
    } else {
      console.error("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i:", result.error);
    }
  };

  const handleLogout = () => {
    logout();
    navigate("/login");
  };

  // Hi·ªÉn th·ªã trang ƒëƒÉng nh·∫≠p n·∫øu ch∆∞a ƒëƒÉng nh·∫≠p

  if (!isAuthenticated) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-md mx-auto text-center">
          <Card>
            <CardContent className="p-6">
              <h2 className="text-2xl font-bold mb-4">ƒêƒÉng nh·∫≠p</h2>
              <p className="text-gray-600 mb-6">
                Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ truy c·∫≠p trang t√†i kho·∫£n
              </p>

              {/* üëá CH·ªà C·∫¶N N√öT ƒêƒÇNG NH·∫¨P DUY NH·∫§T */}
              <Button onClick={() => navigate("/login")} className="w-full">
                ƒêƒÉng nh·∫≠p
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  // S·ª≠ d·ª•ng user t·ª´ auth context ho·∫∑c sampleUser n·∫øu user null
  const currentUser = user || sampleUser;

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-6xl mx-auto">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold">T√†i kho·∫£n c·ªßa t√¥i</h1>
          <Button
            variant="outline"
            onClick={handleLogout}
            className="text-red-600 border-red-200 hover:bg-red-50"
          >
            <LogOut className="h-4 w-4 mr-2" />
            ƒêƒÉng xu·∫•t
          </Button>
        </div>

        <Tabs defaultValue="profile" className="space-y-6">
          <TabsList className="grid w-full grid-cols-5">
            <TabsTrigger value="profile" className="flex items-center gap-2">
              <User className="h-4 w-4" />
              H·ªì s∆°
            </TabsTrigger>
            <TabsTrigger value="orders" className="flex items-center gap-2">
              <ShoppingBag className="h-4 w-4" />
              ƒê∆°n h√†ng
            </TabsTrigger>
            <TabsTrigger value="address" className="flex items-center gap-2">
              <MapPin className="h-4 w-4" />
              ƒê·ªãa ch·ªâ
            </TabsTrigger>
            <TabsTrigger value="security" className="flex items-center gap-2">
              <Shield className="h-4 w-4" />
              B·∫£o m·∫≠t
            </TabsTrigger>
            <TabsTrigger value="settings" className="flex items-center gap-2">
              <Settings className="h-4 w-4" />
              C√†i ƒë·∫∑t
            </TabsTrigger>
          </TabsList>

          {/* Profile Tab */}
          <TabsContent value="profile">
            <div className="grid md:grid-cols-3 gap-6">
              <Card>
                <CardContent className="p-6 text-center">
                  <img
                    src={currentUser.avatar}
                    alt="Avatar"
                    className="w-24 h-24 rounded-full mx-auto mb-4"
                  />
                  <h3 className="text-xl font-semibold">{currentUser.name}</h3>
                  <p className="text-gray-600">{currentUser.email}</p>
                  <Button variant="outline" className="w-full mt-4">
                    ƒê·ªïi ·∫£nh ƒë·∫°i di·ªán
                  </Button>
                </CardContent>
              </Card>

              <Card className="md:col-span-2">
                <CardContent className="p-6">
                  <h3 className="text-lg font-semibold mb-4">
                    Th√¥ng tin c√° nh√¢n
                  </h3>
                  <form className="space-y-4">
                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="name">H·ªç v√† t√™n</Label>
                        <Input id="name" defaultValue={currentUser.name} />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</Label>
                        <Input id="phone" defaultValue={currentUser.phone} />
                      </div>
                    </div>
                    <div className="space-y-2">
                      <Label htmlFor="email">Email</Label>
                      <Input
                        id="email"
                        type="email"
                        defaultValue={currentUser.email}
                      />
                    </div>
                    <Button type="submit">C·∫≠p nh·∫≠t th√¥ng tin</Button>
                  </form>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* Orders Tab */}
          <TabsContent value="orders">
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-4">L·ªãch s·ª≠ ƒë∆°n h√†ng</h3>
                <div className="space-y-4">
                  {orders.map((order) => (
                    <div
                      key={order.id}
                      className="flex items-center justify-between p-4 border rounded-lg"
                    >
                      <div className="flex items-center gap-4">
                        <div className="bg-gray-100 p-3 rounded">
                          <ShoppingBag className="h-6 w-6" />
                        </div>
                        <div>
                          <p className="font-semibold">#{order.id}</p>
                          <p className="text-sm text-gray-600">{order.date}</p>
                          <p className="text-sm">{order.items} s·∫£n ph·∫©m</p>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="font-semibold">{order.total}</p>
                        {getStatusBadge(order.status)}
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Address Tab */}
          <TabsContent value="address">
            <Card>
              <CardContent className="p-6">
                <div className="flex justify-between items-center mb-4">
                  <h3 className="text-lg font-semibold">ƒê·ªãa ch·ªâ giao h√†ng</h3>
                  <Button>Th√™m ƒë·ªãa ch·ªâ m·ªõi</Button>
                </div>
                <div className="grid md:grid-cols-2 gap-4">
                  {currentUser.addresses?.map((address) => (
                    <Card key={address.id}>
                      <CardContent className="p-4">
                        <div className="flex justify-between items-start mb-2">
                          {address.isDefault && <Badge>M·∫∑c ƒë·ªãnh</Badge>}
                          <Button variant="ghost" size="sm">
                            S·ª≠a
                          </Button>
                        </div>
                        <p className="font-semibold">{address.name}</p>
                        <p className="text-sm text-gray-600">{address.phone}</p>
                        <p className="text-sm mt-2">{address.address}</p>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Security Tab */}
          <TabsContent value="security">
            <Card>
              <CardContent className="p-6 space-y-4">
                <h3 className="text-lg font-semibold">B·∫£o m·∫≠t t√†i kho·∫£n</h3>
                <div className="flex justify-between items-center p-4 border rounded-lg">
                  <div>
                    <p className="font-medium">ƒê·ªïi m·∫≠t kh·∫©u</p>
                    <p className="text-sm text-gray-600">
                      C·∫≠p nh·∫≠t m·∫≠t kh·∫©u m·ªõi cho t√†i kho·∫£n
                    </p>
                  </div>
                  <Button variant="outline">ƒê·ªïi m·∫≠t kh·∫©u</Button>
                </div>
                <div className="flex justify-between items-center p-4 border rounded-lg">
                  <div>
                    <p className="font-medium">X√°c th·ª±c 2 b∆∞·ªõc</p>
                    <p className="text-sm text-gray-600">
                      B·∫£o v·ªá t√†i kho·∫£n an to√†n h∆°n
                    </p>
                  </div>
                  <Button variant="outline">B·∫≠t</Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Settings Tab */}
          <TabsContent value="settings">
            <Card>
              <CardContent className="p-6 space-y-4">
                <h3 className="text-lg font-semibold">C√†i ƒë·∫∑t</h3>

                <div className="flex items-center justify-between p-4 border rounded-lg">
                  <div className="flex items-center gap-3">
                    <Bell className="h-5 w-5" />
                    <div>
                      <p className="font-medium">Th√¥ng b√°o</p>
                      <p className="text-sm text-gray-600">
                        Nh·∫≠n th√¥ng b√°o v·ªÅ ƒë∆°n h√†ng v√† khuy·∫øn m√£i
                      </p>
                    </div>
                  </div>
                  <Button variant="outline">C√†i ƒë·∫∑t</Button>
                </div>

                <div className="flex items-center justify-between p-4 border rounded-lg">
                  <div className="flex items-center gap-3">
                    <CreditCard className="h-5 w-5" />
                    <div>
                      <p className="font-medium">Ph∆∞∆°ng th·ª©c thanh to√°n</p>
                      <p className="text-sm text-gray-600">
                        Qu·∫£n l√Ω th·∫ª v√† v√≠ ƒëi·ªán t·ª≠
                      </p>
                    </div>
                  </div>
                  <Button variant="outline">Qu·∫£n l√Ω</Button>
                </div>

                <div className="pt-4 border-t">
                  <Button
                    variant="outline"
                    onClick={handleLogout}
                    className="text-red-600 border-red-200 hover:bg-red-50 w-full"
                  >
                    <LogOut className="h-4 w-4 mr-2" />
                    ƒêƒÉng xu·∫•t
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default AccountPage;
